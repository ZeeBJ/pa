spring.application.name=PA-SERVICE

server.port=7200
server.tomcat.uri-encoding=UTF-8
server.tomcat.max-threads=40
server.tomcat.max-connections=20000
server.tomcat.min-SpareThreads=5
server.tomcat.acceptCount=1000
ribbon.ReadTimeout=10000

spring.profiles.active=${profileActive}

logging.file=/Users/gaolou/Downloads/logs/pa.log

management.endpoints.web.exposure.include=*
management.endpoint.metrics.enabled=true
management.endpoint.httptrace.enabled=true
management.endpoint.health.show-details=always
management.endpoint.prometheus.enabled=true

##########################################################
####               以下为hystrix相关配置                ####
##########################################################
feign.hystrix.enabled=true


# 这样将会自动配置一个 Hystrix 并发策略插件的 hook，这个 hook 会将 SecurityContext 从主线程传输到 Hystrix 的命令。
# 因为 Hystrix 不允许注册多个 Hystrix 策略，所以可以声明 HystrixConcurrencyStrategy
# 为一个 Spring bean 来实现扩展。Spring Cloud 会在 Spring 的上下文中查找你的实现，并将其包装在自己的插件中。
hystrix.shareSecurityContext=true
# 当在配置时间窗口内达到此数量的失败后，进行短路。默认20个
hystrix.command.default.circuitBreaker.requestVolumeThreshold=3

# 触发短路的时间值，当该值设为5000时，则当触发 circuit break 后的5000毫秒内都会拒绝request
# 也就是5000毫秒后才会关闭circuit。默认5000
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5000
# 强制打开熔断器，如果打开这个开关，那么拒绝所有request，默认false
hystrix.command.default.circuitBreaker.forceOpen=false
# 强制关闭熔断器 如果这个开关打开，circuit将一直关闭且忽略，默认false
hystrix.command.default.circuitBreaker.forceClosed=false
# 熔断器超时时间，默认：1000/毫秒
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=1000
##并发执行的最大线程数，默认10
hystrix.threadpool.default.coreSize=50 
##BlockingQueue的最大队列数
hystrix.threadpool.default.maxQueueSize=200 
##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
hystrix.threadpool.default.queueSizeRejectionThreshold=50